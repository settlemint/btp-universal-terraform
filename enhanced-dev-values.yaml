imagePullCredentials:
  registries:
    harbor:
      enabled: true
      registry: "harbor.settlemint.com"
      username: "" # Set via environment variable
      password: "" # Set via environment variable
      email: "" # Set via environment variable
    ghcr:
      enabled: true
      registry: "ghcr.io"
      username: "" # Set via environment variable
      password: "" # Set via environment variable
      email: "" # Set via environment variable
    docker:
      enabled: true
      registry: "docker.io"
      username: "" # Set via environment variable
      password: "" # Set via environment variable
      email: "" # Set via environment variable

license:
  accountName: "" # Set via environment variable
  accountToken: "" # Set via environment variable
  email: "" # Set via environment variable
  expirationDate: "" # Set via environment variable
  blockchainNetworks:
    limit: -1
  blockchainNodes:
    limit: -1
  loadBalancers:
    limit: -1
  privateKeys:
    limit: -1
  smartContractSets:
    limit: -1
  storages:
    limit: -1
  middlewares:
    limit: -1
  integrations:
    limit: -1
  insights:
    limit: -1
  customDeployments:
    limit: -1
  signature: "" # Set via environment variable

ingress:
  enabled: true
  host: console.k8s.orb.local



mongodb:
  enabled: false

auth:
  jwtSigningKey: "" # Set via environment variable or auto-generated

vault:
  enabled: false

internal:
  authJWT:
    signingKey: "" # Set via environment variable or auto-generated
  email:
    enabled: false
    from: "noreply@example.com"
    server:
      host: "smtp.example.com"
      port: "587"
      user: ""
      password: ""

ipfsCluster:
  clusterSecret: "" # Set via environment variable or auto-generated

features:
  deploymentEngine:
    platform:
      domain:
        tls: true
        hostname: "console.k8s.orb.local"
    state:
      secretsProvider: "passphrase"
      credentials:
        encryptionKey: "" # Set via environment variable or auto-generated
        aws:
          accessKeyId: "" # Set via environment variable if needed
          secretAccessKey: "" # Set via environment variable if needed
          region: "us-east-1"
    targets:
      - id: "local"
        name: "Local Development"
        icon: "kubernetes"
        clusters:
          - id: "orbstack"
            name: "Orbstack"
            icon: "global"
            location:
              lat: 50.8505
              lon: 4.3488
            namespace:
              single:
                enabled: true
                name: "deployments"
            connection:
              sameCluster:
                enabled: true
            domains:
              service:
                tls: true
                hostname: "console.k8s.orb.local"
            storage:
              storageClass: "local-path"
            ingress:
              ingressClass: "settlemint-nginx"
            capabilities:
              mixedLoadBalancers: true
              p2pLoadBalancers: false
              nodePorts:
                enabled: true
                range:
                  min: 30000
                  max: 32767


support:
  ingress-nginx:
    enabled: false
  ipfs-cluster:
    enabled: false

# Disable observability node exporter to avoid port conflicts with btp-deps namespace
observability:
  prometheus-node-exporter:
    enabled: false

ingress-nginx:
  controller:
    service:
      type: LoadBalancer
      annotations:
        external-dns.alpha.kubernetes.io/hostname: "console.k8s.orb.local, *.console.k8s.orb.local"
    opentelemetry:
      enabled: true
    replicaCount: 1